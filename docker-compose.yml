version: '3.8'

services:
  # Laravel Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: booking_backend
    volumes:
      - ./backend/laravel:/var/www/html
      - ./backend/laravel/storage:/var/www/html/storage
    env_file:
      - ./backend/laravel/.env
    depends_on:
      - mysql
      - minio
    networks:
      - booking_network

  # Vue.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: booking_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    networks:
      - booking_network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: booking_mysql
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: booking_db
      MYSQL_USER: booking_user
      MYSQL_PASSWORD: booking_pass
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/laravel/database/migrations:/docker-entrypoint-initdb.d
    networks:
      - booking_network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: booking_redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - booking_network

  # MinIO (Object Storage for images)
  minio:
    image: minio/minio:latest
    container_name: booking_minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password123
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: password123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - booking_network

  # Nginx (Load Balancer/Reverse Proxy)
  nginx:
    image: nginx:alpine
    container_name: booking_nginx
    restart: unless-stopped
    ports:
      - "8100:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - backend
      - frontend
    networks:
      - booking_network

volumes:
  mysql_data:
  redis_data:
  minio_data:

networks:
  booking_network:
    driver: bridge
